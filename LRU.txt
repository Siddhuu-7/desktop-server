#include <stdio.h> 
int findLRU(int time[], int n)  
{ 
int i, min = time[0], pos = 0; 
for (i = 1; i < n; i++) { 
if (time[i] < min) { 
min = time[i]; 
pos = i; 
} 
} 
return pos; 
} 
void main()  
{ 
int no_of_frames, no_of_pages, frames[10], pages[30], counter = 0, time[10]; 
int flag1, flag2, i, j, pos, page_faults = 0; 
printf("Enter number of frames: "); 
scanf("%d", &no_of_frames); 
printf("Enter number of pages: "); 
scanf("%d", &no_of_pages); 
printf("Enter reference string: "); 
for (i = 0; i < no_of_pages; i++) { 
scanf("%d", &pages[i]); 
} 
// Initialize all frames as empty 
for (i = 0; i < no_of_frames; i++) { 
frames[i] = -1; 
} 
for (i = 0; i < no_of_pages; i++) { 
flag1 = flag2 = 0; 
// Check if page is already in a frame 
for (j = 0; j < no_of_frames; j++) { 
if (frames[j] == pages[i]) { 
counter++; 
time[j] = counter;  // Update the recent use time 
flag1 = flag2 = 1; 
break; 
} 
} 
// Insert page if it's not in a frame 
if (flag1 == 0)  
{ 
for (j = 0; j < no_of_frames; j++)  
{ 
if (frames[j] == -1)  
{ 
counter++; 
page_faults++; 
frames[j] = pages[i]; 
time[j] = counter; 
flag2 = 1; 
break; 
} 
} 
} 
// Replace the least recently used page 
if (flag2 == 0) { 
pos = findLRU(time, no_of_frames); 
counter++; 
page_faults++; 
frames[pos] = pages[i]; 
time[pos] = counter; 
} 
// Display the current state of frames 
printf("\n"); 
for (j = 0; j < no_of_frames; j++) { 
if (frames[j] != -1) 
printf("%d\t", frames[j]); 
else 
printf("-\t"); 
} 
} 
printf("\n\nTotal Page Faults = %d\n", page_faults); 
return 0; 
}